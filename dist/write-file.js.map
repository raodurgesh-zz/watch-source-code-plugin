{"version":3,"sources":["../src/write-file.js"],"names":["directory","readdir","files","unlinkPromises","filter","filename","indexOf","map","unlink","Promise","all","console","log","RemoveFile","WriteFileWebpackPlugin","util","promisify","fs","debug","isMemoryFileSystem","outputFileSystem","constructor","name","userOptions","options","_","assign","exitOnErrors","force","test","useHashIndex","publicPath","isBoolean","TypeError","isNull","isRegExp","isFunction","append","chalk","dim","format","assetSourceHashIndex","apply","compiler","outputPath","setupDone","setupStatus","setup","cyan","handleAfterEmit","compilation","callback","errors","length","forEach","assets","asset","assetPath","outputFilePath","path","isAbsolute","join","relativeOutputPath","relative","process","cwd","targetDefinition","skip","yellow","assetSize","size","assetSource","Array","isArray","source","assetSourceHash","update","digest","dirName","dirname","setTimeout","mkdirp","sync","writeFileSync","split","green","magenta","error","bold","red","bgRed","message","hooks","afterEmit","tapAsync","plugin"],"mappings":";;;;;;;qEAkBC,iBAA0BA,SAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEuBC,QAAQD,SAAR,CAFvB;;AAAA;AAESE,iBAFT;AAGSC,0BAHT,GAG0BD,MAAME,MAAN,CAAa;AAAA,qBAAYC,SAASC,OAAT,CAAiB,YAAjB,MAAmC,CAAC,CAAhD;AAAA,aAAb,EAAgEC,GAAhE,CAAoE;AAAA,qBAAYC,OAAQ,GAAER,SAAU,IAAGK,QAAS,EAAhC,CAAZ;AAAA,aAApE,CAH1B;AAAA;AAAA,mBAIgBI,QAAQC,GAAR,CAAYP,cAAZ,CAJhB;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAMGQ,oBAAQC,GAAR;;AANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;kBAAeC,U;;;;;kBAcQC,sB;;AAhCxB;;;;AACA;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;AAEA,IAAMb,UAAUc,eAAKC,SAAL,CAAeC,aAAGhB,OAAlB,CAAhB;AACA,IAAMO,SAASO,eAAKC,SAAL,CAAeC,aAAGT,MAAlB,CAAf;;AAGA,IAAMU,QAAQ,qBAAY,2BAAZ,CAAd;;AAaA,IAAMC,qBAAqB,SAArBA,kBAAqB,CAACC,gBAAD,EAAsB;AAC/C,SAAOA,iBAAiBC,WAAjB,CAA6BC,IAA7B,KAAsC,kBAA7C;AACD,CAFD;;AAIe,SAASR,sBAAT,CAAiCS,WAAjC,EAA8C;AAC3D,MAAMC,UAAUC,iBAAEC,MAAF,CAAS,EAAT,EAAa;AAC3BC,kBAAc,IADa;AAE3BC,WAAO,KAFoB;AAG3BhB,SAAK,IAHsB;AAI3BiB,UAAM,IAJqB;AAK3BC,kBAAc,IALa;AAM3BC,gBAAa;AANc,GAAb,EAObR,WAPa,CAAhB;;AASA,MAAI,CAACE,iBAAEO,SAAF,CAAYR,QAAQG,YAApB,CAAL,EAAwC;AACtC,UAAM,IAAIM,SAAJ,CAAc,qDAAd,CAAN;AACD;;AAED,MAAI,CAACR,iBAAEO,SAAF,CAAYR,QAAQI,KAApB,CAAL,EAAiC;AAC/B,UAAM,IAAIK,SAAJ,CAAc,8CAAd,CAAN;AACD;;AAED,MAAI,CAACR,iBAAEO,SAAF,CAAYR,QAAQZ,GAApB,CAAL,EAA+B;AAC7B,UAAM,IAAIqB,SAAJ,CAAc,4CAAd,CAAN;AACD;;AAED,MAAI,CAACR,iBAAES,MAAF,CAASV,QAAQK,IAAjB,CAAD,IAA2B,EAAEJ,iBAAEU,QAAF,CAAWX,QAAQK,IAAnB,KAA4BJ,iBAAEW,UAAF,CAAaZ,QAAQK,IAArB,CAA9B,CAA/B,EAA0F;AACxF,UAAM,IAAII,SAAJ,CAAc,+DAAd,CAAN;AACD;;AAED,MAAI,CAACR,iBAAEO,SAAF,CAAYR,QAAQM,YAApB,CAAL,EAAwC;AACtC,UAAM,IAAIG,SAAJ,CAAc,qDAAd,CAAN;AACD;;AAED,MAAMrB,MAAM,SAANA,GAAM,GAAe;AAAA,sCAAXyB,MAAW;AAAXA,YAAW;AAAA;;AACzB,QAAI,CAACb,QAAQZ,GAAb,EAAkB;AAChB;AACD;;AAEDM,4BAAMoB,gBAAMC,GAAN,CAAU,MAAM,wBAASC,MAAT,CAAgB,UAAhB,CAAN,GAAoC,GAA9C,CAAN,SAA6DH,MAA7D;AACD,GAND;;AAQA,MAAMI,uBAAuB,EAA7B;;AAEA7B,MAAI,SAAJ,EAAeY,OAAf;;AAEA,MAAMkB,QAAQ,SAARA,KAAQ,CAACC,QAAD,EAAc;AAC1B,QAAIC,mBAAJ;AACA,QAAIC,kBAAJ;AACA,QAAIC,oBAAJ;;AAEA,QAAMC,QAAQ,SAARA,KAAQ,GAAM;AAClB,UAAIF,SAAJ,EAAe;AACb,eAAOC,WAAP;AACD;;AAEDD,kBAAY,IAAZ;;AAEAjC,UAAI,mCAAmC0B,gBAAMU,IAAN,CAAWL,SAASvB,gBAAT,CAA0BC,WAA1B,CAAsCC,IAAjD,CAAnC,GAA4F,IAAhG;;AAEA,UAAI,CAACH,mBAAmBwB,SAASvB,gBAA5B,CAAD,IAAkD,CAACI,QAAQI,KAA/D,EAAsE;AACpE,eAAO,KAAP;AACD;;AAEDgB,mBAAapB,QAAQO,UAArB;;AAEAnB,UAAI,oBAAoB0B,gBAAMU,IAAN,CAAWJ,UAAX,CAApB,GAA6C,IAAjD;;AAEAE,oBAAc,IAAd;;AAEA,aAAOA,WAAP;AACD,KApBD;;AAsBA,QAAMG,kBAAkB,SAAlBA,eAAkB,CAACC,WAAD,EAAcC,QAAd,EAA2B;AACjD,UAAI,CAACJ,OAAL,EAAc;AACZI;;AAEA;AACD;;AAED,UAAI3B,QAAQG,YAAR,IAAwBuB,YAAYE,MAAZ,CAAmBC,MAA/C,EAAuD;AACrDF;;AAEA;AACD;;AAEDvC,UAAI,mCAAmC0B,gBAAMU,IAAN,CAAWE,YAAYE,MAAZ,CAAmBC,MAA9B,CAAnC,GAA2E,IAA/E;;AAEA5B,uBAAE6B,OAAF,CAAUJ,YAAYK,MAAtB,EAA8B,UAACC,KAAD,EAAQC,SAAR,EAAsB;AAClD,YAAMC,iBAAiBC,eAAKC,UAAL,CAAgBH,SAAhB,IAA6BA,SAA7B,GAAyCE,eAAKE,IAAL,CAAUjB,UAAV,EAAsBa,SAAtB,CAAhE;AACA,YAAMK,qBAAqBH,eAAKI,QAAL,CAAcC,QAAQC,GAAR,EAAd,EAA6BP,cAA7B,CAA3B;AACA,YAAMQ,mBAAmB,YAAY5B,gBAAMU,IAAN,CAAW,OAAOS,SAAlB,CAAZ,GAA2C,iBAA3C,GAA+DnB,gBAAMU,IAAN,CAAW,OAAOc,kBAAlB,CAAxF;;AAEA,YAAMjC,OAAOL,QAAQK,IAArB;;AAEA,YAAIA,IAAJ,EAAU;AACR,cAAMsC,OAAO1C,iBAAEU,QAAF,CAAWN,IAAX,IAAmB,CAACA,KAAKA,IAAL,CAAU4B,SAAV,CAApB,GAA2C,CAAC5B,KAAK4B,SAAL,CAAzD;;AAEA,cAAIU,IAAJ,EAAU;AACRvD,gBAAIsD,gBAAJ,EAAsB5B,gBAAM8B,MAAN,CAAa,gCAAb,CAAtB;;AAEA;AACD;AACF;;AAED,YAAMC,YAAYb,MAAMc,IAAN,EAAlB;AACA,YAAMC,cAAcC,MAAMC,OAAN,CAAcjB,MAAMkB,MAAN,EAAd,IAAgClB,MAAMkB,MAAN,GAAeb,IAAf,CAAoB,IAApB,CAAhC,GAA4DL,MAAMkB,MAAN,EAAhF;;AAEA,YAAIlD,QAAQM,YAAZ,EAA0B;AACxB,cAAM6C,kBAAkB,wBAAW,QAAX,EAAqBC,MAArB,CAA4BL,WAA5B,EAAyCM,MAAzC,CAAgD,KAAhD,CAAxB;;AAEA,cAAIpC,qBAAqBqB,kBAArB,KAA4CrB,qBAAqBqB,kBAArB,MAA6Ca,eAA7F,EAA8G;AAC5G/D,gBAAIsD,gBAAJ,EAAsB5B,gBAAM8B,MAAN,CAAa,+BAAb,CAAtB;;AAEA;AACD;;AAED3B,+BAAqBqB,kBAArB,IAA2Ca,eAA3C;AACD;;AAED,YAAMG,UAAUnB,eAAKoB,OAAL,CAAajB,kBAAb,CAAhB;;AAGCjD,mBAAWiE,OAAX;;AAEDE,mBAAW;AAAA,iBAAKC,iBAAOC,IAAP,CAAYJ,OAAZ,CAAL;AAAA,SAAX,EAAqC,EAArC;;AAEA,YAAI;AACF7D,uBAAGkE,aAAH,CAAiBrB,mBAAmBsB,KAAnB,CAAyB,GAAzB,EAA8B,CAA9B,CAAjB,EAAmDb,WAAnD;AACA3D,cAAIsD,gBAAJ,EAAsB5B,gBAAM+C,KAAN,CAAY,WAAZ,CAAtB,EAAgD/C,gBAAMgD,OAAN,CAAc,MAAM,wBAASjB,SAAT,CAAN,GAA4B,GAA1C,CAAhD;AACD,SAHD,CAGE,OAAOkB,KAAP,EAAc;AACd3E,cAAIsD,gBAAJ,EAAsB5B,gBAAMkD,IAAN,CAAWC,GAAX,CAAe,kBAAf,CAAtB,EAA0DnD,gBAAMgD,OAAN,CAAc,MAAM,wBAASjB,SAAT,CAAN,GAA4B,GAA1C,CAA1D;AACAzD,cAAI0B,gBAAMkD,IAAN,CAAWE,KAAX,CAAiB,YAAjB,CAAJ,EAAoCpD,gBAAMkD,IAAN,CAAWC,GAAX,CAAeF,MAAMI,OAArB,CAApC;AACD;AACF,OA9CD;AA+CA;AACAxC;AACD,KAhED;;AAkEA,QAAIR,SAASiD,KAAb,EAAoB;AAClBjD,eAASiD,KAAT,CAAeC,SAAf,CAAyBC,QAAzB,CAAkC,2BAAlC,EAA+D7C,eAA/D;AACD,KAFD,MAEO;AACLN,eAASoD,MAAT,CAAgB,YAAhB,EAA8B9C,eAA9B;AACD;AACF,GAlGD;;AAoGA,SAAO;AACLP;AADK,GAAP;AAGD","file":"write-file.js","sourcesContent":["import fs from 'fs';\nimport {createHash} from 'crypto';\nimport path from 'path';\nimport _ from 'lodash';\nimport mkdirp from 'mkdirp';\nimport chalk from 'chalk';\nimport moment from 'moment';\nimport filesize from 'filesize';\nimport createDebug from 'debug';\nimport util  from 'util';\n\nconst readdir = util.promisify(fs.readdir);\nconst unlink = util.promisify(fs.unlink);\n\n\nconst debug = createDebug('write-file-webpack-plugin');\n\n\n async function RemoveFile(directory) {\n  try {\n    const files = await readdir(directory);\n    const unlinkPromises = files.filter(filename => filename.indexOf('hot-update') !== -1).map(filename => unlink(`${directory}/${filename}`));\n    return await Promise.all(unlinkPromises);\n  } catch(err) {\n    console.log(err);\n  }\n}\n\nconst isMemoryFileSystem = (outputFileSystem) => {\n  return outputFileSystem.constructor.name === 'MemoryFileSystem';\n};\n\nexport default function WriteFileWebpackPlugin (userOptions) {\n  const options = _.assign({}, {\n    exitOnErrors: true,\n    force: false,\n    log: true,\n    test: null,\n    useHashIndex: true,\n    publicPath : '/'\n  }, userOptions);\n\n  if (!_.isBoolean(options.exitOnErrors)) {\n    throw new TypeError('options.exitOnErrors value must be of boolean type.');\n  }\n\n  if (!_.isBoolean(options.force)) {\n    throw new TypeError('options.force value must be of boolean type.');\n  }\n\n  if (!_.isBoolean(options.log)) {\n    throw new TypeError('options.log value must be of boolean type.');\n  }\n\n  if (!_.isNull(options.test) && !(_.isRegExp(options.test) || _.isFunction(options.test))) {\n    throw new TypeError('options.test value must be an instance of RegExp or Function.');\n  }\n\n  if (!_.isBoolean(options.useHashIndex)) {\n    throw new TypeError('options.useHashIndex value must be of boolean type.');\n  }\n\n  const log = (...append) => {\n    if (!options.log) {\n      return;\n    }\n\n    debug(chalk.dim('[' + moment().format('HH:mm:ss') + ']'), ...append);\n  };\n\n  const assetSourceHashIndex = {};\n\n  log('options', options);\n\n  const apply = (compiler) => {\n    let outputPath;\n    let setupDone;\n    let setupStatus;\n\n    const setup = () => {\n      if (setupDone) {\n        return setupStatus;\n      }\n\n      setupDone = true;\n\n      log('compiler.outputFileSystem is \"' + chalk.cyan(compiler.outputFileSystem.constructor.name) + '\".');\n\n      if (!isMemoryFileSystem(compiler.outputFileSystem) && !options.force) {\n        return false;\n      }\n\n      outputPath = options.publicPath;\n\n      log('outputPath is \"' + chalk.cyan(outputPath) + '\".');\n\n      setupStatus = true;\n\n      return setupStatus;\n    };\n\n    const handleAfterEmit = (compilation, callback) => {\n      if (!setup()) {\n        callback();\n\n        return;\n      }\n\n      if (options.exitOnErrors && compilation.errors.length) {\n        callback();\n\n        return;\n      }\n\n      log('compilation.errors.length is \"' + chalk.cyan(compilation.errors.length) + '\".');\n\n      _.forEach(compilation.assets, (asset, assetPath) => {\n        const outputFilePath = path.isAbsolute(assetPath) ? assetPath : path.join(outputPath, assetPath);\n        const relativeOutputPath = path.relative(process.cwd(), outputFilePath);\n        const targetDefinition = 'asset: ' + chalk.cyan('./' + assetPath) + '; destination: ' + chalk.cyan('./' + relativeOutputPath);\n\n        const test = options.test;\n\n        if (test) {\n          const skip = _.isRegExp(test) ? !test.test(assetPath) : !test(assetPath);\n\n          if (skip) {\n            log(targetDefinition, chalk.yellow('[skipped; does not match test]'));\n\n            return;\n          }\n        }\n\n        const assetSize = asset.size();\n        const assetSource = Array.isArray(asset.source()) ? asset.source().join('\\n') : asset.source();\n\n        if (options.useHashIndex) {\n          const assetSourceHash = createHash('sha256').update(assetSource).digest('hex');\n\n          if (assetSourceHashIndex[relativeOutputPath] && assetSourceHashIndex[relativeOutputPath] === assetSourceHash) {\n            log(targetDefinition, chalk.yellow('[skipped; matched hash index]'));\n\n            return;\n          }\n\n          assetSourceHashIndex[relativeOutputPath] = assetSourceHash;\n        }\n\n        const dirName = path.dirname(relativeOutputPath);\n\n         \n         RemoveFile(dirName)\n\n        setTimeout(()=> mkdirp.sync(dirName),10)\n\n        try {\n          fs.writeFileSync(relativeOutputPath.split('?')[0], assetSource);\n          log(targetDefinition, chalk.green('[written]'), chalk.magenta('(' + filesize(assetSize) + ')'));\n        } catch (error) {\n          log(targetDefinition, chalk.bold.red('[is not written]'), chalk.magenta('(' + filesize(assetSize) + ')'));\n          log(chalk.bold.bgRed('Exception:'), chalk.bold.red(error.message));\n        }\n      });\n      // eslint-disable-next-line promise/prefer-await-to-callbacks\n      callback();\n    };\n\n    if (compiler.hooks) {\n      compiler.hooks.afterEmit.tapAsync('write-file-webpack-plugin', handleAfterEmit);\n    } else {\n      compiler.plugin('after-emit', handleAfterEmit);\n    }\n  };\n\n  return {\n    apply\n  };\n}"]}